{"version":3,"sources":["Components/Intro/intro.jsx","Components/About/About.jsx","Components/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","IntroBrief","h1","Name","p","JobTitle","Contact","a","NavContainer","withRouter","href","role","className","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Header","Row","Col","md","Card","style","width","height","backgroundColor","Body","icon","faLaptopCode","size","color","Text","fontWeight","position","bottom","faMobileAlt","padding","faTabletAlt","faDesktop","App","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wlDAMA,IAAMA,EAAYC,IAAOC,IAAV,KAQTC,EAAaF,IAAOG,GAAV,KASVC,EAAOJ,IAAOK,EAAV,KAMJC,EAAWN,IAAOK,EAAV,KAURE,EAAUP,IAAOQ,EAAV,KAwBPC,EAAeT,IAAOC,IAAV,KA+BHS,mBAxBf,WACE,OACE,kBAACX,EAAD,KACC,kBAACG,EAAD,yBAA6B,kBAACE,EAAD,2BAC7B,kBAACE,EAAD,iCACA,kBAACC,EAAD,CAASI,KAAK,IAAIC,KAAK,SAASC,UAAU,wBAA1C,WACA,kBAACJ,EAAD,KACA,kBAACK,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,cAAcC,QAAQ,eACjE,kBAACJ,EAAA,EAAOK,MAAR,CAAcN,UAAU,SAASF,KAAK,SAAtC,QACA,kBAACG,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKX,UAAU,WACb,kBAACW,EAAA,EAAIC,KAAL,CAAUd,KAAK,UAAf,SACA,kBAACa,EAAA,EAAIC,KAAL,CAAUd,KAAK,cAAf,aACA,kBAACa,EAAA,EAAIC,KAAL,CAAUd,KAAK,YAAf,YAEF,kBAACa,EAAA,EAAD,a,0VC7EJ,IAAMzB,EAAYC,IAAOC,IAAV,KAQTyB,EAAS1B,IAAOG,GAAV,KA2CGO,mBApCf,WACE,OACE,kBAAC,EAAD,KACE,kBAACiB,EAAA,EAAD,KACA,kBAACD,EAAD,cAGE,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAASC,OAAO,QAASC,gBAAkB,YAC/D,kBAACJ,EAAA,EAAKK,KAAN,KAEE,kBAAC,IAAD,CAAiBC,KAAMC,IAAcC,KAAK,KAAKC,MAAM,YACrD,kBAACT,EAAA,EAAKU,KAAN,CAAWT,MAAO,CAACQ,MAAM,QAASE,WAAW,MAAMC,SAAS,WAAWC,OAAO,MAAMX,MAAM,QAA1F,wBAKN,kBAACJ,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAASC,OAAO,QAASC,gBAAkB,YAC/D,kBAACJ,EAAA,EAAKK,KAAN,KAEE,kBAAC,IAAD,CAAiBC,KAAMQ,IAAaN,KAAK,KAAKP,MAAO,CAACc,QAAQ,OAAQN,MAAM,YAC5E,kBAAC,IAAD,CAAiBH,KAAMU,IAAaR,KAAK,KAAKP,MAAO,CAACc,QAAQ,OAAQN,MAAM,YAC5E,kBAAC,IAAD,CAAiBH,KAAMW,IAAWT,KAAK,KAAKP,MAAO,CAACc,QAAQ,OAAQN,MAAM,YAC1E,kBAACT,EAAA,EAAKU,KAAN,CAAWT,MAAO,CAACQ,MAAM,QAASE,WAAW,MAAMC,SAAS,WAAWC,OAAO,MAAMX,MAAM,QAA1F,6BCpCGtB,mBARjB,WACI,OACC,oCACD,kBAAC,EAAD,MACA,kBAAC,EAAD,UCSWsC,MAVf,WACE,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWC,OCCbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d0177eb5.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components'\nimport { Nav,NavDropdown,Navbar } from 'react-bootstrap'\n// import { postObject, getAllObjects } from \"../../services/CommonServices\";\nimport { withRouter, Link } from 'react-router-dom'\nimport './intro.css'\nconst Container = styled.div`\nbackground-color: #1f2737;\nheight: 100vh;\nwidth: 100%;\ndisplay:flex;\njustify-content: center;\n\n`\nconst IntroBrief = styled.h1`\ndisplay: flex;\ncolor: white;\nposition: absolute;\njustify-content: center;\nwidth:100%;\ntop:35%;\n`\n\nconst Name = styled.p`\ncolor: #ed6c82;\nmargin: 0px;\npadding: 0px;\nwidth: fit-content;\n`\nconst JobTitle = styled.p`\nfont-size: 2.9rem;\ncolor:white;\ndisplay: flex;\ncolor: white;\nposition: absolute;\njustify-content: center;\nwidth:100%;\ntop:42%;\n`\nconst Contact = styled.a`\nbackground: transparent;\nheight: 50px;\nwidth: 100px;\nfont-size: 1.2rem;\ncolor: #ed6c82 !important;\ntext-align: center;\nmargin:auto;\nletter-spacing: 2px;\nborder: 1px solid  #ed6c82;\nposition: absolute;\ntop: 55%;\npadding:8px;\ncursor: pointer;\nfont-weight: 700;\n&:hover {\n    background-color: #ed6c82;\n    color: #1f2737 !important;\n    border: 1px solid  #ed6c82;\n  }\ntext-transform: uppercase;\nwidth:11%;\n\n`\nconst NavContainer = styled.div`\nposition: absolute;\nbottom: 0px;\nleft:40px;\nheight: 80px;\ncolor:white;\n`\nfunction Intro() {\n  return (\n    <Container>\n     <IntroBrief>Hello there, i'm <Name>&nbsp;Adham Khaled.</Name></IntroBrief>\n     <JobTitle>I'm a Frontend Developer</JobTitle>\n     <Contact href=\"#\" role=\"button\" className=\"btn main-button mt-3\">Contact</Contact>\n     <NavContainer>\n     <Navbar collapseOnSelect expand=\"lg\" bg=\"transparent\" variant=\"transparent\">\n  <Navbar.Brand className=\"active\" href=\"#home\">HOME</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#about\">ABOUT</Nav.Link>\n      <Nav.Link href=\"#portfolio\">PORTFOLIO</Nav.Link>\n      <Nav.Link href=\"#contact\">CONTACT</Nav.Link>\n    </Nav>\n    <Nav>\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n</NavContainer>\n     </Container>\n  );\n}\nexport default withRouter(Intro)","import React, { useEffect } from 'react';\nimport styled from 'styled-components'\nimport { Card, Row, Col } from 'react-bootstrap'\n// import { postObject, getAllObjects } from \"../../services/CommonServices\";\nimport { withRouter, Link } from 'react-router-dom'\nimport { faLaptopCode, faMobileAlt,faTabletAlt,faDesktop } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\n\nconst Container = styled.div`\nheight: 100vh;\ntext-align: center;\nmargin-left: 10%;\nmargin-right: 10%;\nmargin-top:20px;\n`\n\nconst Header = styled.h1`\ncolor: #1f2737;\ntext-decoration: underline;\nwidth: 100%;\n\n`\n\nfunction About() {\n  return (\n    <Container >\n      <Row>\n      <Header>\n        ABOUT\n        </Header>\n        <Col md={3}>\n          <Card style={{ width: '15rem', height:'10rem', backgroundColor : '#1f2737' }}>\n            <Card.Body>\n\n              <FontAwesomeIcon icon={faLaptopCode} size=\"6x\" color=\"#ed6c82\" />\n              <Card.Text style={{color:'white', fontWeight:'700',position:'absolute',bottom:'5px',width:'80%'}}>Javascript Native</Card.Text>\n            </Card.Body>\n          </Card>\n\n        </Col>\n        <Col md={3}>\n          <Card style={{ width: '15rem', height:'10rem', backgroundColor : '#1f2737' }}>\n            <Card.Body>\n\n              <FontAwesomeIcon icon={faMobileAlt} size=\"3x\" style={{padding:'5px'}} color=\"#ed6c82\" />\n              <FontAwesomeIcon icon={faTabletAlt} size=\"4x\" style={{padding:'5px'}} color=\"#ed6c82\" />\n              <FontAwesomeIcon icon={faDesktop} size=\"5x\" style={{padding:'5px'}} color=\"#ed6c82\" />\n              <Card.Text style={{color:'white', fontWeight:'700',position:'absolute',bottom:'5px',width:'80%'}}>Responsive Design</Card.Text>\n            </Card.Body>\n          </Card>\n\n        </Col>\n      </Row>\n\n\n      {/* <i class=\"fas fa-laptop-code\"></i> */}\n    </Container>\n  );\n}\nexport default withRouter(About)","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport Intro from '../Intro/intro'\nimport About from '../About/About';\nfunction Home() {\n    return (\n     <>\n    <Intro/>\n    <About/>\n     </>\n    );\n  }\n  export default withRouter(Home)","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport Intro from './Components/Intro/intro'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Home from './Components/Home/Home';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  </BrowserRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}